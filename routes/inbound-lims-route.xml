<routes xmlns="http://camel.apache.org/schema/spring">
    <route id="inbound-lims" errorHandlerRef="deadLetterChannelBuilder">
        <from uri="scheduler:taskUpdate?initialDelay={{serviceRequest-task-status.update.initial.delay}}&amp;delay={{serviceRequest-task-status.update.interval}}" />
        
        <log message="Sheduled FHIR Task status updater " />

        <!---fetch requested & accepted  orders to transition each to either accepted, rejected or completed-->

        <setBody>
            <simple>{{openmrs.username}}:{{openmrs.password}}</simple>
        </setBody>
        <marshal>
            <base64/>
        </marshal>
        <convertBodyTo type="java.lang.String"/>
        
        <setProperty name="basic-openmrs-authentication">
            <simple>Basic ${body}</simple>
        </setProperty>

        <setHeader name="Authorization">
            <simple>${exchangeProperty.basic-openmrs-authentication}</simple>
        </setHeader>

        <setHeader name="CamelHttpMethod">
            <constant>GET</constant>
        </setHeader>

        <toD uri="{{openmrs.baseUrl}}/ws/fhir2/R4/Task?status=requested,accepted"/>
        <unmarshal>
            <json library="Jackson"/>
        </unmarshal>

        <log message="FHIR Tasks bundle             :          ${body}"/>
        
        <choice>
            <!---process Tasks status if tasks are present -->
            <when>
                <jsonpath>$.[?(@.total>0)]</jsonpath>

                <setBody>
                    <jsonpath>$.entry</jsonpath>
                </setBody>

                <split streaming="true">
                    <simple>${body}</simple>

                    <choice>
                        <!--- only process a Task that monitors a ServiceRequest -->
                        <when>
                            <jsonpath>$.[?(@.resource.basedOn[0].type == 'ServiceRequest')]</jsonpath>

                            <setProperty name="task-id">
                                <jsonpath>$.resource.id</jsonpath>
                            </setProperty>

                            <setProperty name="service-request-id">
                                <jsonpath>$.resource.basedOn[0].reference</jsonpath>
                            </setProperty>

                            <setProperty name="service-request-current-status">
                                <jsonpath>$.resource.status</jsonpath>
                            </setProperty> 

                            <!---retrieving associated ServiceRequest -->

                            <toD uri="{{openmrs.baseUrl}}/ws/fhir2/R4/ServiceRequest/${exchangeProperty.service-request-id}"/>
                            <unmarshal>
                                <json library="Jackson"/>
                            </unmarshal>

                            <setBody>
                                <jsonpath>$.subject.reference</jsonpath>
                            </setBody>

                            <convertBodyTo type="java.lang.String"/>

                            <setProperty name="patient-id">
                                <simple>${body.substring(8)}</simple>
                            </setProperty>

                            <!---retrieving equivalent analysis-request from senaite -->

                            <setBody>
                                <simple>{{senaite.username}}:{{senaite.password}}</simple>
                            </setBody>
                            <marshal>
                                <base64/>
                            </marshal>
                            <convertBodyTo type="java.lang.String"/>
                            <setHeader name="Authorization">
                                <simple>Basic ${body}</simple>
                            </setHeader>
                            <setHeader name="CamelHttpMethod">
                                <constant>GET</constant>
                            </setHeader>
                            <setHeader name="Content-Type">
                                <constant>application/json</constant>
                            </setHeader>

                            <toD uri="{{senaite.baseUrl}}/@@API/senaite/v1/search?getClientSampleID=${exchangeProperty.service-request-id}&amp;getClientID=${exchangeProperty.patient-id}&amp;catalog=bika_catalog_analysisrequest_listing"/>
                            <unmarshal>
                                <json library="Jackson"/>
                            </unmarshal>

                            <log message="Senaite analysis request results             :          ${body}"/>

                            <choice>
                                <!---only update ServiceRequest status for which an equivalent Analysis Request was created on Senaite -->
                                <when>
                                    <jsonpath>$.[?(@.items[0].review_state=='sample_due')]</jsonpath>
                                    <setProperty name="service-request-transitioned-status">
                                        <simple>requested</simple>
                                    </setProperty> 
                                </when>
                                <when>
                                    <jsonpath>$.[?(@.items[0].review_state=='sample_received')]</jsonpath>
                                    <setProperty name="service-request-transitioned-status">
                                        <simple>accepted</simple>
                                    </setProperty>
                                </when>
                                <when>
                                    <jsonpath>$.[?(@.items[0].review_state=='published')]</jsonpath>
                                    <setProperty name="service-request-transitioned-status">
                                        <simple>completed</simple>
                                    </setProperty>
                                </when>
                                <when>
                                    <jsonpath>$.[?(@.items[0].review_state=='cancelled')]</jsonpath>
                                    <setProperty name="service-request-transitioned-status">
                                        <simple>rejected</simple>
                                    </setProperty>
                                </when>
                            </choice>

                            <choice>
                                <!---to only update Task status if it is valid(not null - happens if the associated ServiceRequest was never created on senaite) and has actually changed -->
                                <when>
                                    <simple>${exchangeProperty.service-request-current-status} != null &amp;&amp; ${exchangeProperty.service-request-transitioned-status} != null &amp;&amp; ${exchangeProperty.service-request-current-status} != ${exchangeProperty.service-request-transitioned-status}</simple>

                                    <setHeader name="Authorization">
                                        <simple>${exchangeProperty.basic-openmrs-authentication}</simple>
                                    </setHeader>

                                    <setHeader name="CamelHttpMethod">
                                        <constant>PUT</constant>
                                    </setHeader>

                                    <setBody>
                                        <simple>{"resourceType": "Task", "id": "${exchangeProperty.task-id}", "status": "${exchangeProperty.service-request-transitioned-status}", "intent": "order"}</simple>
                                    </setBody>

                                    <toD uri="{{openmrs.baseUrl}}/ws/fhir2/R4/Task/${exchangeProperty.task-id}"/>

                                    <log message="FHIR Task updated results             :          ${body}"/>

                                </when>
                            </choice>
                        </when>
                    </choice>
                </split>
            </when>
        </choice>
    </route>
</routes>